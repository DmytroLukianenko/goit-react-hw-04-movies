{"version":3,"sources":["components/MovieReviews/MovieReviews.js"],"names":["MovieReviews","id","useQuery","a","moviesAPI","getMovieReviews","data","console","log","results","length","Error","retry","isLoading","isError","isSuccess","error","className","s","list","map","review","item","author","text","content","style","fontFamily","message"],"mappings":"iSAOe,SAASA,EAAT,GAA+B,IAAPC,EAAM,EAANA,GAAM,EACcC,YACnD,CAAC,eAAgBD,GAD0C,sBAE3D,4BAAAE,EAAA,sEACuBC,IAAUC,gBAAgBJ,GADjD,UACUK,EADV,OAEIC,QAAQC,IAAIF,EAAKG,SACW,IAAxBH,EAAKG,QAAQC,OAHrB,sBAIc,IAAIC,MAAM,4CAJxB,gCAMWL,GANX,2CAQA,CACIM,OAAO,IAXPC,EADiC,EACjCA,UAAWC,EADsB,EACtBA,QAASC,EADa,EACbA,UAAWT,EADE,EACFA,KAAMU,EADJ,EACIA,MAe7C,OACI,qCACKH,GAAa,cAAC,IAAD,IACbE,GACG,oBAAIE,UAAWC,IAAEC,KAAjB,SACKb,EAAKG,QAAQW,KAAI,SAAAC,GACd,OACI,qBAAIJ,UAAWC,IAAEI,KAAjB,UACI,mBAAGL,UAAWC,IAAEK,OAAhB,SAAyBF,EAAOE,SAChC,mBAAGN,UAAWC,IAAEM,KAAhB,SAAuBH,EAAOI,YAFNJ,EAAOpB,SAQlDa,GACG,mBAAGY,MAAO,CAAEC,WAAY,sBAAxB,SAAiDX,EAAMY","file":"static/js/movie-reviews.25c2b2cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useQuery } from 'react-query';\r\nimport moviesAPI from '../../Services/movie-api';\r\nimport { Loader } from '../Loader/Loader';\r\nimport s from './MovieReviews.module.css';\r\n\r\nexport default function MovieReviews({ id }) {\r\n    const { isLoading, isError, isSuccess, data, error } = useQuery(\r\n        ['movieReviews', id],\r\n        async () => {\r\n            const data = await moviesAPI.getMovieReviews(id);\r\n            console.log(data.results);\r\n            if (data.results.length === 0) {\r\n                throw new Error(\"We don't have any reviews for this movie\");\r\n            }\r\n            return data;\r\n        },\r\n        {\r\n            retry: false,\r\n        },\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <Loader />}\r\n            {isSuccess && (\r\n                <ul className={s.list}>\r\n                    {data.results.map(review => {\r\n                        return (\r\n                            <li className={s.item} key={review.id}>\r\n                                <p className={s.author}>{review.author}</p>\r\n                                <p className={s.text}>{review.content}</p>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            )}\r\n            {isError && (\r\n                <p style={{ fontFamily: 'Roboto, sans-serif' }}>{error.message}</p>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nMovieReviews.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n};"],"sourceRoot":""}