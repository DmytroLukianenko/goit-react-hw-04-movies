{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/react/useQuery.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","QueryObserver","_Subscribable","client","options","_this","initialDataUpdateCount","initialErrorUpdateCount","trackedProps","bindMethods","setOptions","_inheritsLoose","_proto","remove","bind","refetch","onSubscribe","listeners","updateQuery","currentQuery","addObserver","willFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","willLoadOnMount","enabled","dataUpdatedAt","status","retryOnMount","willRefetchOnMount","refetchOnMount","isStale","willFetchOnReconnect","refetchOnReconnect","willFetchOnWindowFocus","refetchOnWindowFocus","willFetchOptionally","isStaleByTime","staleTime","clearTimers","removeObserver","prevOptions","prevQuery","defaultQueryObserverOptions","queryKey","optionalFetch","updateStaleTimeout","refetchInterval","updateRefetchInterval","getCurrentResult","currentResult","getTrackedCurrentResult","trackedCurrentResult","getNextResult","_this2","unsubscribe","subscribe","isFetching","isError","throwOnError","getCurrentQuery","getQueryCache","fetch","fetchOptions","_this3","updateResult","promise","catch","noop","_this4","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","staleTimeoutId","setTimeout","prevResult","notify","shouldNotifyListeners","cache","_this5","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","getNewResult","willFetch","_this$previousQueryRe","data","isPreviousData","isPlaceholderData","keepPreviousData","dataUpdateCount","previousQueryResult","isSuccess","select","_this$currentResultSt","_this$currentResult","currentResultState","structuralSharing","replaceEqualDeep","placeholderData","_extends","getStatusProps","errorUpdatedAt","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","_this6","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","_loop","changed","isIncluded","some","x","isExcluded","v","_ret","_this7","shallowEqualObjects","get","prop","includes","query","build","hasListeners","onQueryUpdate","action","notifyOptions","onSuccess","onError","_this8","notifyManager","batch","onSettled","listener","Subscribable","createValue","_isReset","clearReset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","batchCalls","suspense","observerRef","useRef","observer","current","setCurrentResult","useState","useEffect","useErrorBoundary","isLoading","finally","useQuery","arg1","arg2","arg3","parseQueryArgs"],"mappings":"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","file":"static/js/0.9e957509.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getStatusProps, isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.initialDataUpdateCount = 0;\n    _this.initialErrorUpdateCount = 0;\n    _this.trackedProps = [];\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.updateQuery();\n      this.currentQuery.addObserver(this);\n\n      if (this.willFetchOnMount()) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.willLoadOnMount = function willLoadOnMount() {\n    return this.options.enabled !== false && !this.currentQuery.state.dataUpdatedAt && !(this.currentQuery.state.status === 'error' && this.options.retryOnMount === false);\n  };\n\n  _proto.willRefetchOnMount = function willRefetchOnMount() {\n    return this.options.enabled !== false && this.currentQuery.state.dataUpdatedAt > 0 && (this.options.refetchOnMount === 'always' || this.options.refetchOnMount !== false && this.isStale());\n  };\n\n  _proto.willFetchOnMount = function willFetchOnMount() {\n    return this.willLoadOnMount() || this.willRefetchOnMount();\n  };\n\n  _proto.willFetchOnReconnect = function willFetchOnReconnect() {\n    return this.options.enabled !== false && (this.options.refetchOnReconnect === 'always' || this.options.refetchOnReconnect !== false && this.isStale());\n  };\n\n  _proto.willFetchOnWindowFocus = function willFetchOnWindowFocus() {\n    return this.options.enabled !== false && (this.options.refetchOnWindowFocus === 'always' || this.options.refetchOnWindowFocus !== false && this.isStale());\n  };\n\n  _proto.willFetchOptionally = function willFetchOptionally() {\n    return this.options.enabled !== false && this.isStale();\n  };\n\n  _proto.isStale = function isStale() {\n    return this.currentQuery.isStaleByTime(this.options.staleTime);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery(); // Take no further actions if there are no subscribers\n\n    if (!this.listeners.length) {\n      return;\n    } // If we subscribed to a new query, optionally fetch and update refetch\n\n\n    if (this.currentQuery !== prevQuery) {\n      this.optionalFetch();\n      this.updateTimers();\n      return;\n    } // Optionally fetch if the query became enabled\n\n\n    if (this.options.enabled !== false && prevOptions.enabled === false) {\n      this.optionalFetch();\n    } // Update stale interval if needed\n\n\n    if (this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.getTrackedCurrentResult = function getTrackedCurrentResult() {\n    return this.trackedCurrentResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this2.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this3 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this3.updateResult();\n\n      return _this3.currentResult;\n    });\n  };\n\n  _proto.optionalFetch = function optionalFetch() {\n    if (this.willFetchOptionally()) {\n      this.executeFetch();\n    }\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this4 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this4.currentResult.isStale) {\n        var prevResult = _this4.currentResult;\n\n        _this4.updateResult();\n\n        _this4.notify({\n          listeners: _this4.shouldNotifyListeners(prevResult, _this4.currentResult),\n          cache: true\n        });\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this5 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this5.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this5.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.getNewResult = function getNewResult(willFetch) {\n    var _this$previousQueryRe;\n\n    var state = this.currentQuery.state;\n    var isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data;\n    var dataUpdatedAt = state.dataUpdatedAt; // Optimistically set status to loading if we will start fetching\n\n    if (willFetch) {\n      isFetching = true;\n\n      if (!dataUpdatedAt) {\n        status = 'loading';\n      }\n    } // Keep previous data if needed\n\n\n    if (this.options.keepPreviousData && !state.dataUpdateCount && ((_this$previousQueryRe = this.previousQueryResult) == null ? void 0 : _this$previousQueryRe.isSuccess) && status !== 'error') {\n      data = this.previousQueryResult.data;\n      dataUpdatedAt = this.previousQueryResult.dataUpdatedAt;\n      status = this.previousQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (this.options.select && typeof state.data !== 'undefined') {\n        var _this$currentResultSt;\n\n        // Use the previous select result if the query data did not change\n        if (this.currentResult && state.data === ((_this$currentResultSt = this.currentResultState) == null ? void 0 : _this$currentResultSt.data)) {\n          data = this.currentResult.data;\n        } else {\n          data = this.options.select(state.data);\n\n          if (this.options.structuralSharing !== false) {\n            var _this$currentResult;\n\n            data = replaceEqualDeep((_this$currentResult = this.currentResult) == null ? void 0 : _this$currentResult.data, data);\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof this.options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData = typeof this.options.placeholderData === 'function' ? this.options.placeholderData() : this.options.placeholderData;\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = _extends({}, getStatusProps(status), {\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: state.error,\n      errorUpdatedAt: state.errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > this.initialDataUpdateCount || state.errorUpdateCount > this.initialErrorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: this.isStale(),\n      refetch: this.refetch,\n      remove: this.remove\n    });\n\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(prevResult, result) {\n    var _this6 = this;\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (prevResult === result) {\n      return false;\n    }\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    var keys = Object.keys(result);\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n\n    var _loop = function _loop(i) {\n      var key = keys[i];\n      var changed = prevResult[key] !== result[key];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n\n      if (changed) {\n        if (notifyOnChangePropsExclusions && isExcluded) {\n          return \"continue\";\n        }\n\n        if (!notifyOnChangeProps || isIncluded || notifyOnChangeProps === 'tracked' && _this6.trackedProps.length === 0) {\n          return {\n            v: true\n          };\n        }\n      }\n    };\n\n    for (var i = 0; i < keys.length; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n      if (typeof _ret === \"object\") return _ret.v;\n    }\n\n    return false;\n  };\n\n  _proto.updateResult = function updateResult(willFetch) {\n    var _this7 = this;\n\n    var result = this.getNewResult(willFetch); // Keep reference to the current state on which the current result is based on\n\n    this.currentResultState = this.currentQuery.state; // Only update if something has changed\n\n    if (!shallowEqualObjects(result, this.currentResult)) {\n      this.currentResult = result;\n\n      if (this.options.notifyOnChangeProps === 'tracked') {\n        var addTrackedProps = function addTrackedProps(prop) {\n          if (!_this7.trackedProps.includes(prop)) {\n            _this7.trackedProps.push(prop);\n          }\n        };\n\n        this.trackedCurrentResult = {};\n        Object.keys(result).forEach(function (key) {\n          Object.defineProperty(_this7.trackedCurrentResult, key, {\n            configurable: false,\n            enumerable: true,\n            get: function get() {\n              addTrackedProps(key);\n              return result[key];\n            }\n          });\n        });\n      }\n    }\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var prevQuery = this.currentQuery;\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === prevQuery) {\n      return;\n    }\n\n    this.previousQueryResult = this.currentResult;\n    this.currentQuery = query;\n    this.initialDataUpdateCount = query.state.dataUpdateCount;\n    this.initialErrorUpdateCount = query.state.errorUpdateCount;\n    var willFetch = prevQuery ? this.willFetchOptionally() : this.willFetchOnMount();\n    this.updateResult(willFetch);\n\n    if (!this.hasListeners()) {\n      return;\n    }\n\n    prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n    this.currentQuery.addObserver(this);\n\n    if (this.shouldNotifyListeners(this.previousQueryResult, this.currentResult)) {\n      this.notify({\n        listeners: true\n      });\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    // Store current result and get new result\n    var prevResult = this.currentResult;\n    this.updateResult();\n    var currentResult = this.currentResult; // Update timers\n\n    this.updateTimers(); // Do not notify if the nothing has changed\n\n    if (prevResult === currentResult) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    if (this.shouldNotifyListeners(prevResult, currentResult)) {\n      notifyOptions.listeners = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify(_this8.currentQuery);\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly re-mounting after suspense\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    } // Prevent retrying failed query if the error boundary has not been reset yet\n\n\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  } // Create query observer\n\n\n  var observerRef = React.useRef();\n  var observer = observerRef.current || new Observer(queryClient, defaultedOptions);\n  observerRef.current = observer; // Update options\n\n  if (observer.hasListeners()) {\n    observer.setOptions(defaultedOptions);\n  }\n\n  var currentResult = observer.getCurrentResult();\n\n  var _React$useState = React.useState(currentResult),\n      setCurrentResult = _React$useState[1]; // Subscribe to the observer\n\n\n  React.useEffect(function () {\n    errorResetBoundary.clearReset();\n    return observer.subscribe(notifyManager.batchCalls(setCurrentResult));\n  }, [observer, errorResetBoundary]); // Handle suspense\n\n  if (observer.options.suspense || observer.options.useErrorBoundary) {\n    if (observer.options.suspense && currentResult.isLoading) {\n      errorResetBoundary.clearReset();\n      var unsubscribe = observer.subscribe();\n      throw observer.refetch().finally(unsubscribe);\n    }\n\n    if (currentResult.isError) {\n      throw currentResult.error;\n    }\n  }\n\n  return observer.options.notifyOnChangeProps === 'tracked' ? observer.getTrackedCurrentResult() : currentResult;\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}"],"sourceRoot":""}